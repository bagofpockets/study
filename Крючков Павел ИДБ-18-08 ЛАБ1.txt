#include "stdafx.h"
#include <iostream>
#include <iostream>
#include <cmath>
#include <string>
using namespace std;

/*int from_base(int N, int B, int I, int S) //I and S always equal 0
{
	while (N > 0)
	{
		S += (pow(B, I) * (N % B));
		I++;
		N /= B;
	}
	return S;
}

int to_base(int N, int B)
{
	if (N > 0)
	{
		to_base(N / B, B);
	}
	cout << (N % B);
	return 0;
}*/

int from_base_2(int N, int I, int S)
{
	while (N > 0)
	{
		S += (pow(2, I) * (N % 10));
		I++;
		N /= 10;
	}
	return S;
}

int to_base_2(int N)
{
	if (N > 1)
	{
		to_base_2(N >> 1);
	}
	cout << (N & 1);
	return 0;
}

long int fact(int N)
{
	if (N < 0)
	{
		return 0; //error
	}
	if (N == 0)
	{
		return 1; //exception
	}
	else
	{
		return N * fact(N - 1); //recursion
	}
}

long double calculus(bool N)
{
	double a, b;
	string func;

	if (N == true)
	{
		cout << "INPUT NUMBER(S) AND FUNCTION\nCURENTLY SUPPORTED FUNCTIONS ARE: +, -, /, *, !, sin, cos, tg, ctg, pow, root, ln, log\nFORMAT: (NUMBER) (FUNCTION) (ADDITIONAL NUMBER)\n>";
	}
	cin >> a >> func;
	if (func == "+")
	{
		cin >> b;
		return a + b;
	}
	if (func == "-")
	{
		cin >> b;
		return a - b;
	}
	if (func == "/")
	{
		cin >> b;
		if (b != 0)
		{
			return a / b;
		}
		else
		{
			cout << "INPUT PROPER NUMBERS AND FUNCTION FELLOW HUMAN\n> "; //error
			return calculus(false);
		}
	}
	if (func == "*")
	{
		cin >> b;
		return a * b;
	}
	if (func == "!") //factorial
	{
		return fact(a);
	}
	if (func == "sin") //sin
	{
		return sin(a);
	}
	if (func == "cos") //cos
	{
		return cos(a);
	}
	if (func == "tg") //tg
	{
		return tan(a);
	}
	if (func == "ctg") //ctg
	{
		return 1 / tan(a);
	}
	if (func == "pow") //rise to power
	{
		cin >> b;
		return pow(a, b);
	}
	if (func == "root") //root
	{
		cin >> b;
		if (a >= 0)
		{
			return pow(a, 1 / b);
		}
		else
		{
			cout << "INPUT PROPER NUMBERS AND FUNCTION FELLOW HUMAN\n> "; //error
			return calculus(false);
		}
	}
	if (func == "ln") //ln
	{
		if (a >= 0)
		{
			return log(a);
		}
		else
		{
			cout << "INPUT PROPER NUMBERS AND FUNCTION FELLOW HUMAN\n> "; //error
			return calculus(false);
		}
	}
	if (func == "log") //log
	{
		if (a >= 0)
		{
			return log10(a);
		}
		else
		{
			cout << "INPUT PROPER NUMBERS AND FUNCTION FELLOW HUMAN\n> "; //error
			return calculus(false);
		}
	}
	else
	{
		cout << "INPUT PROPER NUMBERS AND FUNCTION FELLOW HUMAN\n> "; //error
		return calculus(false);
	}
}

int in_base(bool N)
{
	int a, base, base_result;

	if (N == true)
	{
		cout << "INPUT BASE, NUMBER AND RESULT BASE\nCURRENTLY SUPPORTED BASES ARE 2, 8, 10 AND 16\n";
	}
	cout << "BASE: ";
	cin >> base;
	cout << "NUMBER: ";
	switch (base)
	{
	case 2:
		cin >> dec >> a;
		a = from_base_2(a, 0, 0);
		break;
	case 10:
		cin >> dec >> a;
		break;
	case 8:
		cin >> oct >> a;
		cin.unsetf(cin.oct);
		break;
	case 16:
		cin >> hex >> a;
		cin.unsetf(cin.hex);
		break;
	default:
		cout << "INPUT PROPER BASE, NUMBER AND RESULT BASE\n";
		return in_base(false);
		break;
	}
	cout << "RESULT BASE: ";
	cin >> base_result;
	cout.unsetf(cout.hex);
	cout.unsetf(cout.oct);
	if (base_result == 2)
	{
		cout.setf(cout.dec);
		cout << "\nCONVERTED NUMBER: ";
		to_base_2(a);
		cout << endl;
		return 0;
	}
	if (base_result == 8)
	{
		cout << "\nCONVERTED NUMBER: ";
		cout.setf(cout.oct);
		cout << oct << a << endl;
		return 0;
	}
	if (base_result == 10)
	{
		cout << "\nCONVERTED NUMBER: ";
		cout.setf(cout.dec);
		cout << dec << a << endl;
		return 0;
	}
	if (base_result == 16)
	{
		cout << "\nCONVERTED NUMBER: " ;
		cout.setf(cout.hex);
		cout << hex << a << endl;
		return 0;
	}
	else
	{
		cout << "INPUT PROPER BASE, NUMBER AND RESULT BASE\n";
		return in_base(false);
	}
}

short int dialog(bool N)
{
	short int choice;

	if (N == true)
	{
		cout << "PRESS 1 IF YOU WANT TO CALCULATE, 2 IF YOU WANT CONVERT FROM BASE TO BASE\n> ";
	}
	cin >> choice;
	switch (choice)
	{
	case 1:
		cout << calculus(true) << endl;
		return 0;
	case 2:
		in_base(true);
		return 0;
	default:
		cout << "WRONG CHOICE\n> ";
		return dialog(false);
	}
}

int main()
{
	dialog(true);
	system("pause");
    return 0;
}
